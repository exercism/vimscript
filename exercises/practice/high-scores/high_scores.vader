
Execute (List of scores):
  let g:scores = [30, 50, 20, 70]
  let g:highScores = HighScores(g:scores)
  let g:expected = [30, 50, 20, 70]
  AssertEqual g:expected, highScores.Scores()

Execute (Latest score):
  let g:scores = [100, 0, 90, 30]
  let g:highScores = HighScores(g:scores)
  let g:expected = 30
  AssertEqual g:expected, highScores.Latest()

Execute (Personal best):
  let g:scores = [40, 100, 70]
  let g:highScores = HighScores(g:scores)
  let g:expected = 100
  AssertEqual g:expected, highScores.PersonalBest()

Execute (Personal top three from a list of scores):
  let g:scores = [10, 30, 90, 30, 100, 20, 10, 0, 30, 40, 40, 70, 70]
  let g:highScores = HighScores(g:scores)
  let g:expected = [100, 90, 70]
  AssertEqual g:expected, highScores.PersonalTopThree()

Execute (Personal top highest to lowest):
  let g:scores = [20, 10, 30]
  let g:highScores = HighScores(g:scores)
  let g:expected = [30, 20, 10]
  AssertEqual g:expected, highScores.PersonalTopThree()

Execute (Personal top when there is a tie):
  let g:scores = [40, 20, 40, 30]
  let g:highScores = HighScores(g:scores)
  let g:expected = [40, 40, 30]
  AssertEqual g:expected, highScores.PersonalTopThree()

Execute (Personal top when there are less than 3):
  let g:scores = [30, 70]
  let g:highScores = HighScores(g:scores)
  let g:expected = [70, 30]
  AssertEqual g:expected, highScores.PersonalTopThree()

Execute (Personal top when there is only one):
  let g:scores = [40]
  let g:highScores = HighScores(g:scores)
  let g:expected = [40]
  AssertEqual g:expected, highScores.PersonalTopThree()

Execute (Latest score after personal top scores):
  let g:scores = [70, 50, 20, 30]
  let g:highScores = HighScores(g:scores)
  call highScores.PersonalTopThree()
  let g:expected = 30
  AssertEqual g:expected, highScores.Latest()

Execute (Scores after personal top scores):
  let g:scores = [30, 50, 20, 70]
  let g:highScores = HighScores(g:scores)
  call highScores.PersonalTopThree()
  let g:expected = [30, 50, 20, 70]
  AssertEqual g:expected, highScores.Scores()

Execute (Latest score after personal best):
  let g:scores = [20, 70, 15, 25, 30]
  let g:highScores = HighScores(g:scores)
  call highScores.PersonalBest()
  let g:expected = 30
  AssertEqual g:expected, highScores.Latest()

Execute (Scores after personal best):
  let g:scores = [20, 70, 15, 25, 30]
  let g:highScores = HighScores(g:scores)
  call highScores.PersonalBest()
  let g:expected = [20, 70, 15, 25, 30]
  AssertEqual g:expected, highScores.Scores()
